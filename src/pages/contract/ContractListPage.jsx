import React, { useState, useContext } from "react";
import { UserContext } from "../../contexts/UserContext";
import { ContractContext } from "../../contexts/ContractContext";
import { Table, Form, Button, Row, Col, Container } from "react-bootstrap";
import { colors } from "../../constants/colors";
import Headers from "../../components/Header";
import Sidebar from "../../components/SideBar";
import { useNavigate } from "react-router-dom";
function ContractListPage() {
  const { userData } = useContext(UserContext);
  const { contractData, setContractIdDetail } = useContext(ContractContext);

  const navigate = useNavigate();
  console.log("üßç userData:", userData);
  console.log("üìú contractData:", contractData);

  const [statusFilter, setStatusFilter] = useState("");
  const [searchTerm, setSearchTerm] = useState("");
  const [startDate, setStartDate] = useState("");
  const [endDate, setEndDate] = useState("");

  // L·∫•y t√™n ng∆∞·ªùi thu√™ t·ª´ tenantId
  const getTenantName = (tenantId) => {
    const tenant = userData.find((user) => user.id === tenantId);
    return tenant ? tenant.full_name : "N/A";
  };

  // L·ªçc danh s√°ch h·ª£p ƒë·ªìng
  const filteredContracts = contractData.filter((contract) => {
    const matchesStatus = statusFilter
      ? contract.status.includes(statusFilter)
      : true;
    const matchesSearch =
      searchTerm === "" ||
      getTenantName(contract.tenantId)
        .toLowerCase()
        .includes(searchTerm.toLowerCase()) ||
      contract.id.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesDate =
      (!startDate || new Date(contract.startDate) >= new Date(startDate)) &&
      (!endDate || new Date(contract.endDate) <= new Date(endDate));

    return matchesStatus && matchesSearch && matchesDate;
  });

  return (
    <div style={{ height: "100vh", display: "flex", flexDirection: "column" }}>
      {/* Header c·ªë ƒë·ªãnh ·ªü tr√™n */}
      <div
        style={{
          marginBottom: 10,
          borderRadius: "10px",
          flexShrink: 0,
          position: "sticky",
          top: 0,
          zIndex: 1000,
        }}
      >
        <Headers />
      </div>

      {/* Ph·∫ßn n·ªôi dung b√™n d∆∞·ªõi header */}
      <div style={{ flex: 1, display: "flex", overflow: "hidden" }}>
        {/* Sidebar c·ªë ƒë·ªãnh b√™n tr√°i */}
        <div
          style={{
            width: "220px",
            backgroundColor: colors.brand,
            color: "white",
            height: "100%",
            position: "sticky",
            top: 0,
            borderRadius: "10px",
          }}
        >
          <Sidebar />
        </div>

        {/* N·ªôi dung ch√≠nh b√™n ph·∫£i */}
        <div
          style={{
            flex: 1,
            padding: "30px",
            backgroundColor: colors.background,
            overflowY: "auto",
          }}
        >
          <h4 style={{ fontWeight: "600", marginBottom: "20px" }}>
            Danh S√°ch H·ª£p ƒê·ªìng
          </h4>

          {/* B·ªô l·ªçc */}
          <Row className="align-items-end mb-3">
            <Col md={3}>
              <Form.Label>Tr·∫°ng th√°i:</Form.Label>
              <Form.Select
                value={statusFilter}
                onChange={(e) => setStatusFilter(e.target.value)}
              >
                <option value="">T·∫•t c·∫£</option>
                <option value="ƒêang ho·∫°t ƒë·ªông">ƒêang ho·∫°t ƒë·ªông</option>
                <option value="ƒêang x·ª≠ l√Ω">ƒêang x·ª≠ l√Ω</option>
                <option value="H·∫øt h·∫°n">H·∫øt h·∫°n</option>
                <option value="ƒê√£ h·ªßy">ƒê√£ h·ªßy</option>
              </Form.Select>
            </Col>

            <Col md={4}>
              <Form.Label>Ng√†y:</Form.Label>
              <div className="d-flex gap-2">
                <Form.Control
                  type="date"
                  value={startDate}
                  onChange={(e) => setStartDate(e.target.value)}
                />
                <Form.Control
                  type="date"
                  value={endDate}
                  onChange={(e) => setEndDate(e.target.value)}
                />
              </div>
            </Col>

            <Col md={3}>
              <Form.Label>T√¨m ki·∫øm:</Form.Label>
              <Form.Control
                type="text"
                placeholder="Nh·∫≠p t√™n ho·∫∑c m√£ h·ª£p ƒë·ªìng..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </Col>

            <Col md={2}>
              <Button
                variant="primary"
                style={{
                  width: "100%",
                  backgroundColor: colors.brand,
                  border: "none",
                  marginTop: "5px",
                }}
              >
                T√¨m
              </Button>
            </Col>
          </Row>

          {/* B·∫£ng danh s√°ch */}
          <Table bordered hover responsive>
            <thead style={{ backgroundColor: "#E6E8ED" }}>
              <tr>
                <th>ID H·ª£p ƒê·ªìng</th>
                <th>T√™n Ng∆∞·ªùi Thu√™</th>
                <th>S·ªë ph√≤ng</th>
                <th>Ng√†y B·∫Øt ƒê·∫ßu</th>
                <th>Ng√†y K·∫øt Th√∫c</th>
                <th>Tr·∫°ng Th√°i</th>
                <th>H√†nh ƒê·ªông</th>
              </tr>
            </thead>
            <tbody>
              {filteredContracts.length > 0 ? (
                filteredContracts.map((contract) => (
                  <tr key={contract.id}>
                    <td>{contract.id}</td>
                    <td>{getTenantName(contract.tenantId)}</td>
                    <td>{contract.room}</td>
                    <td>
                      {new Date(contract.startDate).toLocaleDateString("vi-VN")}
                    </td>
                    <td>
                      {new Date(contract.endDate).toLocaleDateString("vi-VN")}
                    </td>
                    <td>{contract.status}</td>
                    <td>
                      <span
                        style={{
                          color: colors.brand,
                          cursor: "pointer",
                          fontWeight: "500",
                        }}
                        onClick={() => {
                          setContractIdDetail(contract.id);
                          navigate(`/contracts/${contract.id}`);
                          console.log("h·ª£p ƒë·ªìng : " + contract.id);
                        }}
                      >
                        Xem chi ti·∫øt
                      </span>
                    </td>
                  </tr>
                ))
              ) : (
                <tr>
                  <td colSpan="7" className="text-center">
                    Kh√¥ng c√≥ h·ª£p ƒë·ªìng n√†o ph√π h·ª£p
                  </td>
                </tr>
              )}
            </tbody>
          </Table>

          {/* T·∫£i file v√† n√∫t t·∫°o h·ª£p ƒë·ªìng */}
          <div
            style={{
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
              marginTop: "20px",
            }}
          >
            <div>
              <Form.Group controlId="formFile">
                <Form.Label style={{ fontWeight: "500" }}>
                  Ch·ªçn file:
                </Form.Label>
                <div className="d-flex align-items-center gap-2">
                  <Form.Control type="file" style={{ width: "250px" }} />
                  <Button
                    variant="primary"
                    style={{ backgroundColor: colors.brand, border: "none" }}
                  >
                    T·∫£i l√™n
                  </Button>
                </div>
              </Form.Group>
            </div>

            <Button
              variant="primary"
              style={{
                backgroundColor: colors.brand,
                border: "none",
                padding: "10px 20px",
              }}
            >
              T·∫°o h·ª£p ƒë·ªìng m·ªõi
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}

export default ContractListPage;
